export const snapshot = {};

snapshot[`Source maps from CSS files 1`] = `
{
  formats: [
    {
      engines: 1,
      ext: ".tmpl.ts",
      pageLoader: [AsyncFunction: module],
    },
    {
      engines: 1,
      ext: ".tmpl.js",
      pageLoader: [AsyncFunction: module],
    },
    {
      engines: undefined,
      ext: ".tmpl.jsonc",
      pageLoader: [AsyncFunction: json],
    },
    {
      engines: undefined,
      ext: ".tmpl.json",
      pageLoader: [AsyncFunction: json],
    },
    {
      dataLoader: [AsyncFunction: json],
      engines: undefined,
      ext: ".json",
    },
    {
      dataLoader: [AsyncFunction: json],
      engines: undefined,
      ext: ".jsonc",
    },
    {
      engines: 1,
      ext: ".md",
      pageLoader: [AsyncFunction: text],
    },
    {
      engines: 1,
      ext: ".markdown",
      pageLoader: [AsyncFunction: text],
    },
    {
      componentLoader: [AsyncFunction: module],
      dataLoader: [AsyncFunction: module],
      engines: 1,
      ext: ".js",
    },
    {
      componentLoader: [AsyncFunction: module],
      dataLoader: [AsyncFunction: module],
      engines: 1,
      ext: ".ts",
    },
    {
      componentLoader: [AsyncFunction: text],
      engines: 1,
      ext: ".njk",
      includesPath: "_includes",
      pageLoader: [AsyncFunction: text],
    },
    {
      dataLoader: [AsyncFunction: toml],
      engines: undefined,
      ext: ".toml",
      pageLoader: [AsyncFunction: toml],
    },
    {
      dataLoader: [AsyncFunction: yaml],
      engines: undefined,
      ext: ".yaml",
      pageLoader: [AsyncFunction: yaml],
    },
    {
      dataLoader: [AsyncFunction: yaml],
      engines: undefined,
      ext: ".yml",
      pageLoader: [AsyncFunction: yaml],
    },
    {
      asset: true,
      engines: undefined,
      ext: ".scss",
      includesPath: "_includes",
      pageLoader: [AsyncFunction: text],
    },
    {
      asset: true,
      engines: undefined,
      ext: ".sass",
      includesPath: "_includes",
      pageLoader: [AsyncFunction: text],
    },
    {
      asset: true,
      engines: undefined,
      ext: ".css",
      includesPath: "_includes",
      pageLoader: [AsyncFunction: text],
    },
  ],
}
`;

snapshot[`Source maps from CSS files 2`] = `[]`;

snapshot[`Source maps from CSS files 3`] = `
[
  {
    content: '{"version":3,"sourceRoot":"assets","mappings":"ACAA,4BCEA,2DCFA,cEMA","sources":["index.scss","styles.css","third.scss","fourth.scss","colors.scss","button.scss"],"sourcesContent":["body {\\
  font-family: sans-serif;\\
}\\
html{scroll-behavior:smooth;font:100% Helvetica,sans-serif}\\
hr{color:blue}\\
body{font:100% Helvetica,sans-serif;color:#333}","","","","",""],"names":[],"file":"index.css.map"}',
    data: {
      content: '{"version":3,"sourceRoot":"assets","mappings":"ACAA,4BCEA,2DCFA,cEMA","sources":["index.scss","styles.css","third.scss","fourth.scss","colors.scss","button.scss"],"sourcesContent":["body {\\
  font-family: sans-serif;\\
}\\
html{scroll-behavior:smooth;font:100% Helvetica,sans-serif}\\
hr{color:blue}\\
body{font:100% Helvetica,sans-serif;color:#333}","","","","",""],"names":[],"file":"index.css.map"}',
      page: [
        "src",
        "data",
      ],
      sourceMap: "undefined",
      url: "/index.css.map",
    },
    src: {
      asset: true,
      ext: undefined,
      path: "",
      remote: undefined,
      slug: "index",
    },
  },
  {
    content: '{"version":3,"sourceRoot":"assets","mappings":"AAEA","sources":["index2.sass","colors.scss"],"sourcesContent":["",""],"names":[],"file":"index2.css.map"}',
    data: {
      content: '{"version":3,"sourceRoot":"assets","mappings":"AAEA","sources":["index2.sass","colors.scss"],"sourcesContent":["",""],"names":[],"file":"index2.css.map"}',
      page: [
        "src",
        "data",
      ],
      sourceMap: "undefined",
      url: "/index2.css.map",
    },
    src: {
      asset: true,
      ext: undefined,
      path: "",
      remote: undefined,
      slug: "index2",
    },
  },
  {
    content: '{"version":3,"sourceRoot":"assets","mappings":"AAAA","sources":["styles.css"],"sourcesContent":["body {\\
  font-family: sans-serif;\\
}"],"names":[],"file":"styles.css.map"}',
    data: {
      content: '{"version":3,"sourceRoot":"assets","mappings":"AAAA","sources":["styles.css"],"sourcesContent":["body {\\
  font-family: sans-serif;\\
}"],"names":[],"file":"styles.css.map"}',
      page: [
        "src",
        "data",
      ],
      sourceMap: "undefined",
      url: "/styles.css.map",
    },
    src: {
      asset: true,
      ext: undefined,
      path: "",
      remote: undefined,
      slug: "styles",
    },
  },
  {
    content: "body{font-family:sans-serif}html{scroll-behavior:smooth;font:100% Helvetica,sans-serif}hr{color:#00f}body{color:#333;font:100% Helvetica,sans-serif}
" +
      "/*# sourceMappingURL=./index.css.map */",
    data: {
      content: '@import "./styles.css";
' +
        '@import "./_includes/sass/colors";
' +
        '@import "sass/button";
',
      date: [],
      mergedKeys: [
        "tags",
      ],
      page: [
        "src",
        "data",
      ],
      paginate: "paginate",
      search: [],
      sourceMap: "undefined",
      tags: "Array(0)",
      url: "/index.css",
    },
    src: {
      asset: true,
      ext: ".scss",
      path: "/index",
      remote: undefined,
      slug: "index",
    },
  },
  {
    content: "body{color:#00f}
/*# sourceMappingURL=./index2.css.map */",
    data: {
      content: '@import "sass/colors"

body
  color: \$primary-color
',
      date: [],
      mergedKeys: [
        "tags",
      ],
      page: [
        "src",
        "data",
      ],
      paginate: "paginate",
      search: [],
      sourceMap: "undefined",
      tags: "Array(0)",
      url: "/index2.css",
    },
    src: {
      asset: true,
      ext: ".sass",
      path: "/index2",
      remote: undefined,
      slug: "index2",
    },
  },
  {
    content: "body{font-family:sans-serif}
/*# sourceMappingURL=./styles.css.map */",
    data: {
      content: "body {
  font-family: sans-serif;
}",
      date: [],
      mergedKeys: [
        "tags",
      ],
      page: [
        "src",
        "data",
      ],
      paginate: "paginate",
      search: [],
      sourceMap: "undefined",
      tags: "Array(0)",
      url: "/styles.css",
    },
    src: {
      asset: true,
      ext: ".css",
      path: "/styles",
      remote: undefined,
      slug: "styles",
    },
  },
]
`;

snapshot[`Source maps from Js files 1`] = `
{
  formats: [
    {
      engines: 1,
      ext: ".tmpl.ts",
      pageLoader: [AsyncFunction: module],
    },
    {
      engines: 1,
      ext: ".tmpl.js",
      pageLoader: [AsyncFunction: module],
    },
    {
      engines: undefined,
      ext: ".tmpl.jsonc",
      pageLoader: [AsyncFunction: json],
    },
    {
      engines: undefined,
      ext: ".tmpl.json",
      pageLoader: [AsyncFunction: json],
    },
    {
      dataLoader: [AsyncFunction: json],
      engines: undefined,
      ext: ".json",
    },
    {
      dataLoader: [AsyncFunction: json],
      engines: undefined,
      ext: ".jsonc",
    },
    {
      engines: 1,
      ext: ".md",
      pageLoader: [AsyncFunction: text],
    },
    {
      engines: 1,
      ext: ".markdown",
      pageLoader: [AsyncFunction: text],
    },
    {
      asset: true,
      componentLoader: [AsyncFunction: module],
      dataLoader: [AsyncFunction: module],
      engines: 1,
      ext: ".js",
      pageLoader: [AsyncFunction: text],
    },
    {
      asset: true,
      componentLoader: [AsyncFunction: module],
      dataLoader: [AsyncFunction: module],
      engines: 1,
      ext: ".ts",
      pageLoader: [AsyncFunction: text],
    },
    {
      componentLoader: [AsyncFunction: text],
      engines: 1,
      ext: ".njk",
      includesPath: "_includes",
      pageLoader: [AsyncFunction: text],
    },
    {
      dataLoader: [AsyncFunction: toml],
      engines: undefined,
      ext: ".toml",
      pageLoader: [AsyncFunction: toml],
    },
    {
      dataLoader: [AsyncFunction: yaml],
      engines: undefined,
      ext: ".yaml",
      pageLoader: [AsyncFunction: yaml],
    },
    {
      dataLoader: [AsyncFunction: yaml],
      engines: undefined,
      ext: ".yml",
      pageLoader: [AsyncFunction: yaml],
    },
  ],
}
`;

snapshot[`Source maps from Js files 2`] = `[]`;

snapshot[`Source maps from Js files 3`] = `
[
  {
    content: '{"version":3,"file":"main.js.map","names":["toUppercase","text","toUpperCase","document","querySelectorAll","forEach","h1","innerHTML"],"sources":["to_uppercase.ts","main.ts"],"sourcesContent":["export default function toUppercase(text: string) {\\
  return text.toUpperCase();\\
}\\
","/// <reference lib=\\\\"dom\\\\" />\\
import toUppercase from \\\\"./modules/to_uppercase.ts\\\\";\\
\\
document.querySelectorAll(\\\\"h1\\\\")?.forEach((h1) => {\\
  h1.innerHTML = toUppercase(h1.innerHTML);\\
});\\
"],"mappings":"AAAe,SAARA,EAA6BC,GAClC,OAAOA,EAAKC,aACd,E,yBAFwBF,E,cAAA,c,kBCGxBG,SAASC,iBAAiB,OAAOC,SAASC,IACxCA,EAAGC,UAAYP,EAAYM,EAAGC,UAAS","sourceRoot":"assets"}',
    data: {
      content: '{"version":3,"file":"main.js.map","names":["toUppercase","text","toUpperCase","document","querySelectorAll","forEach","h1","innerHTML"],"sources":["to_uppercase.ts","main.ts"],"sourcesContent":["export default function toUppercase(text: string) {\\
  return text.toUpperCase();\\
}\\
","/// <reference lib=\\\\"dom\\\\" />\\
import toUppercase from \\\\"./modules/to_uppercase.ts\\\\";\\
\\
document.querySelectorAll(\\\\"h1\\\\")?.forEach((h1) => {\\
  h1.innerHTML = toUppercase(h1.innerHTML);\\
});\\
"],"mappings":"AAAe,SAARA,EAA6BC,GAClC,OAAOA,EAAKC,aACd,E,yBAFwBF,E,cAAA,c,kBCGxBG,SAASC,iBAAiB,OAAOC,SAASC,IACxCA,EAAGC,UAAYP,EAAYM,EAAGC,UAAS","sourceRoot":"assets"}',
      page: [
        "src",
        "data",
      ],
      sourceMap: "undefined",
      url: "/main.js.map",
    },
    src: {
      asset: true,
      ext: undefined,
      path: "",
      remote: undefined,
      slug: "main",
    },
  },
  {
    content: '{"version":3,"file":"to_uppercase.js.map","names":["toUppercase","text","toUpperCase","n"],"sources":["to_uppercase.ts"],"sourcesContent":["export default function toUppercase(text: string) {\\
  return text.toUpperCase();\\
}\\
"],"mappings":"AAAe,SAARA,EAA6BC,GAClC,OAAOA,EAAKC,aACd,E,yBAFwBF,E,cAAA,c,yBAAAG","sourceRoot":"assets"}',
    data: {
      content: '{"version":3,"file":"to_uppercase.js.map","names":["toUppercase","text","toUpperCase","n"],"sources":["to_uppercase.ts"],"sourcesContent":["export default function toUppercase(text: string) {\\
  return text.toUpperCase();\\
}\\
"],"mappings":"AAAe,SAARA,EAA6BC,GAClC,OAAOA,EAAKC,aACd,E,yBAFwBF,E,cAAA,c,yBAAAG","sourceRoot":"assets"}',
      page: [
        "src",
        "data",
      ],
      sourceMap: "undefined",
      url: "/modules/to_uppercase.js.map",
    },
    src: {
      asset: true,
      ext: undefined,
      path: "",
      remote: undefined,
      slug: "to_uppercase",
    },
  },
  {
    content: '{"version":3,"file":"other.js.map","names":["toUppercase","text","toUpperCase","document","querySelectorAll","forEach","el","innerHTML"],"sources":["to_uppercase.ts","other.ts"],"sourcesContent":["export default function toUppercase(text: string) {\\
  return text.toUpperCase();\\
}\\
","/// <reference lib=\\\\"dom\\\\" />\\
import toUppercase from \\\\"./modules/to_uppercase.ts\\\\";\\
\\
document.querySelectorAll(\\\\".other\\\\")?.forEach((el) => {\\
  el.innerHTML = toUppercase(el.innerHTML);\\
});\\
"],"mappings":"AAAe,SAARA,EAA6BC,GAClC,OAAOA,EAAKC,aACd,E,yBAFwBF,E,cAAA,c,kBCGxBG,SAASC,iBAAiB,WAAWC,SAASC,IAC5CA,EAAGC,UAAYP,EAAYM,EAAGC,UAAS","sourceRoot":"assets"}',
    data: {
      content: '{"version":3,"file":"other.js.map","names":["toUppercase","text","toUpperCase","document","querySelectorAll","forEach","el","innerHTML"],"sources":["to_uppercase.ts","other.ts"],"sourcesContent":["export default function toUppercase(text: string) {\\
  return text.toUpperCase();\\
}\\
","/// <reference lib=\\\\"dom\\\\" />\\
import toUppercase from \\\\"./modules/to_uppercase.ts\\\\";\\
\\
document.querySelectorAll(\\\\".other\\\\")?.forEach((el) => {\\
  el.innerHTML = toUppercase(el.innerHTML);\\
});\\
"],"mappings":"AAAe,SAARA,EAA6BC,GAClC,OAAOA,EAAKC,aACd,E,yBAFwBF,E,cAAA,c,kBCGxBG,SAASC,iBAAiB,WAAWC,SAASC,IAC5CA,EAAGC,UAAYP,EAAYM,EAAGC,UAAS","sourceRoot":"assets"}',
      page: [
        "src",
        "data",
      ],
      sourceMap: "undefined",
      url: "/other.js.map",
    },
    src: {
      asset: true,
      ext: undefined,
      path: "",
      remote: undefined,
      slug: "other",
    },
  },
  {
    content: 'function e(e){return e.toUpperCase()}(0,Object.defineProperty)(e,"name",{value:"toUppercase",configurable:!0}),document.querySelectorAll("h1")?.forEach((r=>{r.innerHTML=e(r.innerHTML)}));
' +
      "//# sourceMappingURL=./main.js.map",
    data: {
      content: '/// <reference lib="dom" />
' +
        'import toUppercase from "./modules/to_uppercase.ts";
' +
        "
" +
        'document.querySelectorAll("h1")?.forEach((h1) => {
' +
        "  h1.innerHTML = toUppercase(h1.innerHTML);
" +
        "});
",
      date: [],
      mergedKeys: [
        "tags",
      ],
      page: [
        "src",
        "data",
      ],
      paginate: "paginate",
      search: [],
      sourceMap: "undefined",
      tags: "Array(0)",
      url: "/main.js",
    },
    src: {
      asset: true,
      ext: ".ts",
      path: "/main",
      remote: undefined,
      slug: "main",
    },
  },
  {
    content: 'function e(e){return e.toUpperCase()}(0,Object.defineProperty)(e,"name",{value:"toUppercase",configurable:!0});export{e as default};
' +
      "//# sourceMappingURL=./to_uppercase.js.map",
    data: {
      content: "export default function toUppercase(text: string) {
" +
        "  return text.toUpperCase();
" +
        "}
",
      date: [],
      mergedKeys: [
        "tags",
      ],
      page: [
        "src",
        "data",
      ],
      paginate: "paginate",
      search: [],
      sourceMap: "undefined",
      tags: "Array(0)",
      url: "/modules/to_uppercase.js",
    },
    src: {
      asset: true,
      ext: ".ts",
      path: "/modules/to_uppercase",
      remote: undefined,
      slug: "to_uppercase",
    },
  },
  {
    content: 'function e(e){return e.toUpperCase()}(0,Object.defineProperty)(e,"name",{value:"toUppercase",configurable:!0}),document.querySelectorAll(".other")?.forEach((r=>{r.innerHTML=e(r.innerHTML)}));
' +
      "//# sourceMappingURL=./other.js.map",
    data: {
      content: '/// <reference lib="dom" />
' +
        'import toUppercase from "./modules/to_uppercase.ts";
' +
        "
" +
        'document.querySelectorAll(".other")?.forEach((el) => {
' +
        "  el.innerHTML = toUppercase(el.innerHTML);
" +
        "});
",
      date: [],
      mergedKeys: [
        "tags",
      ],
      page: [
        "src",
        "data",
      ],
      paginate: "paginate",
      search: [],
      sourceMap: "undefined",
      tags: "Array(0)",
      url: "/other.js",
    },
    src: {
      asset: true,
      ext: ".ts",
      path: "/other",
      remote: undefined,
      slug: "other",
    },
  },
]
`;
