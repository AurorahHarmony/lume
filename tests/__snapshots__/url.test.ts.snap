export const snapshot = {};

snapshot[`url and htmlUrl update href 1`] = `
{
  formats: [
    {
      engines: 1,
      ext: ".page.ts",
      loader: [AsyncFunction: module],
      pageType: "page",
    },
    {
      engines: 1,
      ext: ".page.js",
      loader: [AsyncFunction: module],
      pageType: "page",
    },
    {
      engines: undefined,
      ext: ".page.jsonc",
      loader: [AsyncFunction: json],
      pageType: "page",
    },
    {
      engines: undefined,
      ext: ".page.json",
      loader: [AsyncFunction: json],
      pageType: "page",
    },
    {
      dataLoader: [AsyncFunction: json],
      engines: undefined,
      ext: ".json",
      loader: [AsyncFunction: json],
    },
    {
      dataLoader: [AsyncFunction: json],
      engines: undefined,
      ext: ".jsonc",
      loader: [AsyncFunction: json],
    },
    {
      engines: 1,
      ext: ".md",
      loader: [AsyncFunction: text],
      pageType: "page",
    },
    {
      engines: 1,
      ext: ".markdown",
      loader: [AsyncFunction: text],
      pageType: "page",
    },
    {
      dataLoader: [AsyncFunction: module],
      engines: 1,
      ext: ".js",
      loader: [AsyncFunction: module],
    },
    {
      dataLoader: [AsyncFunction: module],
      engines: 1,
      ext: ".ts",
      loader: [AsyncFunction: module],
    },
    {
      engines: 1,
      ext: ".njk",
      loader: [AsyncFunction: text],
      pageType: "page",
    },
    {
      dataLoader: [AsyncFunction: toml],
      engines: undefined,
      ext: ".toml",
      loader: [AsyncFunction: toml],
      pageType: "page",
    },
    {
      dataLoader: [AsyncFunction: yaml],
      engines: undefined,
      ext: ".yaml",
      loader: [AsyncFunction: yaml],
      pageType: "page",
    },
    {
      dataLoader: [AsyncFunction: yaml],
      engines: undefined,
      ext: ".yml",
      loader: [AsyncFunction: yaml],
      pageType: "page",
    },
  ],
  src: [
    "/",
    "/default-filter.page.js",
    "/renamed-filter.page.js",
  ],
}
`;

snapshot[`url and htmlUrl update href 2`] = `[]`;

snapshot[`url and htmlUrl update href 3`] = `
[
  {
    content: '
    <!DOCTYPE html>
    <html lang="en">
        <head>
            <title>Default Filter</title>
        </head>
        <body>
            <a id="url" href="https://example.com/test/url/">Url</a>
            <a id="htmlUrl" href="https://example.com/test/htmlUrl/">htmlUrl</a>
            <template>
              <h1>Template content</h1>
            </template>
        </body>
    </html>
  ',
    data: {
      children: '
    <!DOCTYPE html>
    <html lang="en">
        <head>
            <title>Default Filter</title>
        </head>
        <body>
            <a id="url" href="https://example.com/test/url/">Url</a>
            <a id="htmlUrl" href="https://example.com/test/htmlUrl/">htmlUrl</a>
            <template>
              <h1>Template content</h1>
            </template>
        </body>
    </html>
  ',
      content: "default",
      date: [],
      mergedKeys: [
        "tags",
      ],
      page: [
        "src",
        "data",
      ],
      paginate: "paginate",
      search: [],
      tags: "Array(0)",
      title: "Default Filter",
      url: "/default-filter/",
    },
    src: {
      asset: false,
      ext: ".page.js",
      path: "/default-filter",
      remote: undefined,
      slug: "default-filter",
    },
  },
  {
    content: '
    <!DOCTYPE html>
    <html lang="en">
        <head>
            <title>Renamed Filter</title>
        </head>
        <body>
            <a id="urlify" href="undefined">Urlify</a>
            undefined
        </body>
    </html>
  ',
    data: {
      children: '
    <!DOCTYPE html>
    <html lang="en">
        <head>
            <title>Renamed Filter</title>
        </head>
        <body>
            <a id="urlify" href="undefined">Urlify</a>
            undefined
        </body>
    </html>
  ',
      content: "default",
      date: [],
      mergedKeys: [
        "tags",
      ],
      page: [
        "src",
        "data",
      ],
      paginate: "paginate",
      search: [],
      tags: "Array(0)",
      title: "Renamed Filter",
      url: "/renamed-filter/",
    },
    src: {
      asset: false,
      ext: ".page.js",
      path: "/renamed-filter",
      remote: undefined,
      slug: "renamed-filter",
    },
  },
]
`;

snapshot[`configure url and htmlUrl names 1`] = `
{
  formats: [
    {
      engines: 1,
      ext: ".page.ts",
      loader: [AsyncFunction: module],
      pageType: "page",
    },
    {
      engines: 1,
      ext: ".page.js",
      loader: [AsyncFunction: module],
      pageType: "page",
    },
    {
      engines: undefined,
      ext: ".page.jsonc",
      loader: [AsyncFunction: json],
      pageType: "page",
    },
    {
      engines: undefined,
      ext: ".page.json",
      loader: [AsyncFunction: json],
      pageType: "page",
    },
    {
      dataLoader: [AsyncFunction: json],
      engines: undefined,
      ext: ".json",
      loader: [AsyncFunction: json],
    },
    {
      dataLoader: [AsyncFunction: json],
      engines: undefined,
      ext: ".jsonc",
      loader: [AsyncFunction: json],
    },
    {
      engines: 1,
      ext: ".md",
      loader: [AsyncFunction: text],
      pageType: "page",
    },
    {
      engines: 1,
      ext: ".markdown",
      loader: [AsyncFunction: text],
      pageType: "page",
    },
    {
      dataLoader: [AsyncFunction: module],
      engines: 1,
      ext: ".js",
      loader: [AsyncFunction: module],
    },
    {
      dataLoader: [AsyncFunction: module],
      engines: 1,
      ext: ".ts",
      loader: [AsyncFunction: module],
    },
    {
      engines: 1,
      ext: ".njk",
      loader: [AsyncFunction: text],
      pageType: "page",
    },
    {
      dataLoader: [AsyncFunction: toml],
      engines: undefined,
      ext: ".toml",
      loader: [AsyncFunction: toml],
      pageType: "page",
    },
    {
      dataLoader: [AsyncFunction: yaml],
      engines: undefined,
      ext: ".yaml",
      loader: [AsyncFunction: yaml],
      pageType: "page",
    },
    {
      dataLoader: [AsyncFunction: yaml],
      engines: undefined,
      ext: ".yml",
      loader: [AsyncFunction: yaml],
      pageType: "page",
    },
  ],
  src: [
    "/",
    "/default-filter.page.js",
    "/renamed-filter.page.js",
  ],
}
`;

snapshot[`configure url and htmlUrl names 2`] = `[]`;

snapshot[`configure url and htmlUrl names 3`] = `
[
  {
    content: '
    <!DOCTYPE html>
    <html lang="en">
        <head>
            <title>Default Filter</title>
        </head>
        <body>
            <a id="url" href="undefined">Url</a>
            undefined
            <template>
              <h1>Template content</h1>
            </template>
        </body>
    </html>
  ',
    data: {
      children: '
    <!DOCTYPE html>
    <html lang="en">
        <head>
            <title>Default Filter</title>
        </head>
        <body>
            <a id="url" href="undefined">Url</a>
            undefined
            <template>
              <h1>Template content</h1>
            </template>
        </body>
    </html>
  ',
      content: "default",
      date: [],
      mergedKeys: [
        "tags",
      ],
      page: [
        "src",
        "data",
      ],
      paginate: "paginate",
      search: [],
      tags: "Array(0)",
      title: "Default Filter",
      url: "/default-filter/",
    },
    src: {
      asset: false,
      ext: ".page.js",
      path: "/default-filter",
      remote: undefined,
      slug: "default-filter",
    },
  },
  {
    content: '
    <!DOCTYPE html>
    <html lang="en">
        <head>
            <title>Renamed Filter</title>
        </head>
        <body>
            <a id="urlify" href="https://example.com/urlify/">Urlify</a>
            <a id="htmlUrlify" href="https://example.com/htmlUrlify/">htmlUrlify</a>
        </body>
    </html>
  ',
    data: {
      children: '
    <!DOCTYPE html>
    <html lang="en">
        <head>
            <title>Renamed Filter</title>
        </head>
        <body>
            <a id="urlify" href="https://example.com/urlify/">Urlify</a>
            <a id="htmlUrlify" href="https://example.com/htmlUrlify/">htmlUrlify</a>
        </body>
    </html>
  ',
      content: "default",
      date: [],
      mergedKeys: [
        "tags",
      ],
      page: [
        "src",
        "data",
      ],
      paginate: "paginate",
      search: [],
      tags: "Array(0)",
      title: "Renamed Filter",
      url: "/renamed-filter/",
    },
    src: {
      asset: false,
      ext: ".page.js",
      path: "/renamed-filter",
      remote: undefined,
      slug: "renamed-filter",
    },
  },
]
`;
