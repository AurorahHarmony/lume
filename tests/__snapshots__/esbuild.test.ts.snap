export const snapshot = {};

snapshot[`esbuild plugin 1`] = `
{
  formats: [
    {
      engines: 1,
      ext: ".tmpl.ts",
      pageLoader: [AsyncFunction: module],
    },
    {
      engines: 1,
      ext: ".tmpl.js",
      pageLoader: [AsyncFunction: module],
    },
    {
      engines: undefined,
      ext: ".tmpl.jsonc",
      pageLoader: [AsyncFunction: json],
    },
    {
      engines: undefined,
      ext: ".tmpl.json",
      pageLoader: [AsyncFunction: json],
    },
    {
      dataLoader: [AsyncFunction: json],
      engines: undefined,
      ext: ".json",
    },
    {
      dataLoader: [AsyncFunction: json],
      engines: undefined,
      ext: ".jsonc",
    },
    {
      engines: 1,
      ext: ".md",
      pageLoader: [AsyncFunction: text],
    },
    {
      engines: 1,
      ext: ".markdown",
      pageLoader: [AsyncFunction: text],
    },
    {
      asset: true,
      componentLoader: [AsyncFunction: module],
      dataLoader: [AsyncFunction: module],
      engines: 1,
      ext: ".js",
      pageLoader: [AsyncFunction: text],
    },
    {
      asset: true,
      componentLoader: [AsyncFunction: module],
      dataLoader: [AsyncFunction: module],
      engines: 1,
      ext: ".ts",
      pageLoader: [AsyncFunction: text],
    },
    {
      componentLoader: [AsyncFunction: text],
      engines: 1,
      ext: ".njk",
      includesPath: "_includes",
      pageLoader: [AsyncFunction: text],
    },
    {
      dataLoader: [AsyncFunction: toml],
      engines: undefined,
      ext: ".toml",
      pageLoader: [AsyncFunction: toml],
    },
    {
      dataLoader: [AsyncFunction: yaml],
      engines: undefined,
      ext: ".yaml",
      pageLoader: [AsyncFunction: yaml],
    },
    {
      dataLoader: [AsyncFunction: yaml],
      engines: undefined,
      ext: ".yml",
      pageLoader: [AsyncFunction: yaml],
    },
  ],
}
`;

snapshot[`esbuild plugin 2`] = `[]`;

snapshot[`esbuild plugin 3`] = `
[
  {
    content: 'var n=Object.defineProperty;var t=(e,o)=>n(e,"name",{value:o,configurable:!0});function r(e){return e.toUpperCase()}t(r,"toUppercase");document.querySelectorAll("h1")?.forEach(e=>{e.innerHTML=r(e.innerHTML)});
',
    data: {
      content: '/// <reference lib="dom" />
' +
        'import toUppercase from "./modules/to_uppercase.ts";
' +
        "
" +
        'document.querySelectorAll("h1")?.forEach((h1) => {
' +
        "  h1.innerHTML = toUppercase(h1.innerHTML);
" +
        "});
",
      date: [],
      mergedKeys: [
        "tags",
      ],
      page: [
        "src",
        "data",
      ],
      paginate: "paginate",
      search: [],
      tags: "Array(0)",
      url: "/main.js",
    },
    src: {
      asset: true,
      ext: ".ts",
      path: "/main",
      remote: undefined,
      slug: "main",
    },
  },
  {
    content: 'var n=Object.defineProperty;var t=(e,o)=>n(e,"name",{value:o,configurable:!0});function r(e){return e.toUpperCase()}t(r,"toUppercase");document.querySelectorAll(".other")?.forEach(e=>{e.innerHTML=r(e.innerHTML)});
',
    data: {
      content: '/// <reference lib="dom" />
' +
        'import toUppercase from "./modules/to_uppercase.ts";
' +
        "
" +
        'document.querySelectorAll(".other")?.forEach((el) => {
' +
        "  el.innerHTML = toUppercase(el.innerHTML);
" +
        "});
",
      date: [],
      mergedKeys: [
        "tags",
      ],
      page: [
        "src",
        "data",
      ],
      paginate: "paginate",
      search: [],
      tags: "Array(0)",
      url: "/other.js",
    },
    src: {
      asset: true,
      ext: ".ts",
      path: "/other",
      remote: undefined,
      slug: "other",
    },
  },
]
`;

snapshot[`esbuild plugin with splitting as true 1`] = `
{
  formats: [
    {
      engines: 1,
      ext: ".tmpl.ts",
      pageLoader: [AsyncFunction: module],
    },
    {
      engines: 1,
      ext: ".tmpl.js",
      pageLoader: [AsyncFunction: module],
    },
    {
      engines: undefined,
      ext: ".tmpl.jsonc",
      pageLoader: [AsyncFunction: json],
    },
    {
      engines: undefined,
      ext: ".tmpl.json",
      pageLoader: [AsyncFunction: json],
    },
    {
      dataLoader: [AsyncFunction: json],
      engines: undefined,
      ext: ".json",
    },
    {
      dataLoader: [AsyncFunction: json],
      engines: undefined,
      ext: ".jsonc",
    },
    {
      engines: 1,
      ext: ".md",
      pageLoader: [AsyncFunction: text],
    },
    {
      engines: 1,
      ext: ".markdown",
      pageLoader: [AsyncFunction: text],
    },
    {
      asset: true,
      componentLoader: [AsyncFunction: module],
      dataLoader: [AsyncFunction: module],
      engines: 1,
      ext: ".js",
      pageLoader: [AsyncFunction: text],
    },
    {
      asset: true,
      componentLoader: [AsyncFunction: module],
      dataLoader: [AsyncFunction: module],
      engines: 1,
      ext: ".ts",
      pageLoader: [AsyncFunction: text],
    },
    {
      componentLoader: [AsyncFunction: text],
      engines: 1,
      ext: ".njk",
      includesPath: "_includes",
      pageLoader: [AsyncFunction: text],
    },
    {
      dataLoader: [AsyncFunction: toml],
      engines: undefined,
      ext: ".toml",
      pageLoader: [AsyncFunction: toml],
    },
    {
      dataLoader: [AsyncFunction: yaml],
      engines: undefined,
      ext: ".yaml",
      pageLoader: [AsyncFunction: yaml],
    },
    {
      dataLoader: [AsyncFunction: yaml],
      engines: undefined,
      ext: ".yml",
      pageLoader: [AsyncFunction: yaml],
    },
  ],
}
`;

snapshot[`esbuild plugin with splitting as true 2`] = `[]`;

snapshot[`esbuild plugin with splitting as true 3`] = `
[
  {
    content: 'var p=Object.defineProperty;var t=(e,r)=>p(e,"name",{value:r,configurable:!0});function n(e){return e.toUpperCase()}t(n,"toUppercase");export{n as a};
',
    data: {
      content: "",
      page: [
        "src",
        "data",
      ],
      url: "/foo/chunk.js",
    },
    src: {
      asset: true,
      ext: undefined,
      path: "",
      remote: undefined,
      slug: "chunk",
    },
  },
  {
    content: 'import{a as r}from"./chunk.js";document.querySelectorAll("h1")?.forEach(e=>{e.innerHTML=r(e.innerHTML)});
',
    data: {
      content: '/// <reference lib="dom" />
' +
        'import toUppercase from "./modules/to_uppercase.ts";
' +
        "
" +
        'document.querySelectorAll("h1")?.forEach((h1) => {
' +
        "  h1.innerHTML = toUppercase(h1.innerHTML);
" +
        "});
",
      date: [],
      mergedKeys: [
        "tags",
      ],
      page: [
        "src",
        "data",
      ],
      paginate: "paginate",
      search: [],
      tags: "Array(0)",
      url: "/foo/main.js",
    },
    src: {
      asset: true,
      ext: ".ts",
      path: "/main",
      remote: undefined,
      slug: "main",
    },
  },
  {
    content: 'import{a as e}from"./chunk.js";document.querySelectorAll(".other")?.forEach(r=>{r.innerHTML=e(r.innerHTML)});
',
    data: {
      content: '/// <reference lib="dom" />
' +
        'import toUppercase from "./modules/to_uppercase.ts";
' +
        "
" +
        'document.querySelectorAll(".other")?.forEach((el) => {
' +
        "  el.innerHTML = toUppercase(el.innerHTML);
" +
        "});
",
      date: [],
      mergedKeys: [
        "tags",
      ],
      page: [
        "src",
        "data",
      ],
      paginate: "paginate",
      search: [],
      tags: "Array(0)",
      url: "/foo/other.js",
    },
    src: {
      asset: true,
      ext: ".ts",
      path: "/other",
      remote: undefined,
      slug: "other",
    },
  },
]
`;
